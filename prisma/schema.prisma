// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  favoriteProjects String[]
  Projects         Project[]
  githubUrl        String?
  linkedInUrl      String?
  portfolioUrl     String?
  followers        String[]
  following        String[]
  comments         Comment[]
}

model Project {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  userId             String    @db.ObjectId
  projectTitle       String
  projectDescription String
  image              String
  projectLink        String
  liveProjectLink    String?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])
  comments           Comment[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  projectId String   @db.ObjectId
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Project   Project  @relation(fields: [projectId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}
